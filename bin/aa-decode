#!/bin/sh
#
# Author: Jamie Strandboge <jamie@ubuntu.com>
# Copyright (C) 2009-2010 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 3 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#

set -e

help() {
    cat <<EOM
aa-decode
Description: decodes hex-encoded string to ASCII

Usage:
 aa-decode <encoded string>
 cat /var/log/kern.log | aa-decode

 Eg:
 $ aa-decode 2F686F6D65
 Decoded: /home
EOM
}

decode() {
    encoded="$1"
    len=`echo "$encoded" | wc -m`
    decoded=""

    decoded=`perl -le "\\$s = '$encoded' ; print pack 'H*', \\$s"`
    echo "$decoded"
}

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit
fi

# if have an argument, then use it, otherwise process stdin
if [ -n "$1" ]; then
    e=`echo "$1" | tr -s '[:lower:]' '[:upper:]'`
    if ! echo "$e" | egrep -q "^[0-9A-F]+$" ; then
        echo "String should only contain hex characters (0-9, a-f, A-F)"
        return
    fi

    d=`decode $e`
    if [ -z "$d" ]; then
        echo "Could not decode string"
        exit 1
    fi

    echo "Decoded: $d"
    exit 0
fi

# AppArmor logs always have 'name=...' last in the log entry, so validate input
# against this and output based on it
egrep ' name=2[fF][0-9a-fA-F]*$' | while read line ; do
    e=`echo "$line" | sed 's/.* name=\(.*\)/\\1/g' | tr -s '[:lower:]' '[:upper:]'`
    d=`decode $e`
    echo -n "$line" | sed "s/\(.*\) name=.*/\1 name=/g"
    echo "'$d'"
done

